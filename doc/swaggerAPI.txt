swagger: "2.0"
info:
  description: "Cross wallet project server api document 입니다.\n[https://cross-server.herokuapp.com](https://cross-server.herokuapp.com)\n heroku 무료 서버 이용으로 30분 이상 서버에 요청이 없을 시 자동으로 서버가 종료됩니다. 종료된 서버에 요청을 시도하면 2~3분 뒤에 서버가 구동됩니다."
  version: "1.0.0"
  title: "Cross wallet service"
host: "cross-server.herokuapp.com"
basePath: "/v2"
tags:
- name: "wallet"
  description: "Wallet 조회 및 관리 API"
- name: "transaction"
  description: "트랜젝션 조회 API"
schemes:
- "http"
paths:
  /support/wallet/list:
    get:
      tags:
      - "wallet"
      summary: "지원하는 wallet 종류"
      operationId: "getSupportWallets"
      responses:
        200:
          description: "vv"
        405:
          description: "Invalid input"
  /wallet/list:
    get:
      tags:
      - "wallet"
      summary: "지갑 목록 조회"
      description: ""
      operationId: "getWallets"
      produces:
      - application/json
      responses:
        200:
          description: "[{uid, ownerEmail, ownerName, name, symbol, description, originalAddress, crossAddress, balance}]"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Wallet"
  /wallet/{symbol}:
    get:
      tags:
      - "wallet"
      summary: "지갑 정보 조회"
      description: ""
      operationId: "getWallet"
      produces:
      - application/json
      consumes:
      - application/x-www-form-urlencoded
      parameters:
      - name: "symbol"
        in: "path"
        description: "조회하고자 하는 코인 종류"
        required: true
        type: "string"
      - name: "address"
        in: "formData"
        description: "지갑 주소(Cross address or Original address)"
        required: true
        type: "string"
      responses:
        200:
          description: ""
          schema:
            $ref: "#/definitions/Wallet"
    post:
      tags:
      - "wallet"
      summary: "지갑 만들기"
      description: ""
      operationId: "createWallet"
      consumes:
      - application/x-www-form-urlencoded
      produces:
      - application/json
      parameters:
      - name: "symbol"
        in: "path"
        description: "생성하고자 하는 코인 종류"
        required: true
        type: "string"
      - name: "name"
        in: "formData"
        description: "지갑 이름"
        required: true
        type: "string"
      - name: "password"
        in: "formData"
        description: "지갑 비밀번호"
        required: true
        type: "string"
      - name: "description"
        in: "formData"
        description: "지갑 설명"
        required: true
        type: "string"
      responses:
        200:
          description: ""
          schema:
            $ref: "#/definitions/WalletCreateResult"
    put:
      tags:
      - "wallet"
      summary: "지갑 정보 수정"
      description: ""
      operationId: "modifyWallet"
      produces:
      - application/json
      consumes:
      - application/json
      parameters:
      - in: "body"
        name: "body"
        description: "Pet object that needs to be added to the store"
        required: true
        schema:
          $ref: "#/definitions/WalletModify"
      responses:
        200:
          description: ""
  /wallet/{symbol}/balance:
    get:
      tags:
      - "wallet"
      summary: "지갑에 담긴 코인 개수 조회"
      description: ""
      operationId: "getWalletBalance"
      consumes:
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      parameters:
      - name: "symbol"
        in: "path"
        description: "코인 종류"
        required: true
        type: "string"
      - name: "address"
        in: "formData"
        description: "조회할 지갑 주소(Cross Address or Original Address)"
        required: true
        type: "string"
      responses:
        200:
          description: "2.3123141232"
  /wallet/:symbol/send:
    post:
      tags:
      - "wallet"
      summary: "코인 전송"
      description: ""
      operationId: "sendCoin"
      consumes:
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      parameters:
      - name: "symbol"
        in: "path"
        description: "코인 종류"
        required: true
        type: "string"
      - name: "walletFileName"
        in: "formData"
        description: "지갑 파일 이름"
        required: true
        type: "string"
      - name: "walletJsonFile"
        in: "formData"
        description: "지갑 파일 JSON"
        required: true
        type: "string"
      - name: "password"
        in: "formData"
        description: "지갑 비밀번호"
        required: true
        type: "string"
      - name: "amount"
        in: "formData"
        description: "전송할 양"
        required: true
        type: "string"
      responses:
        200:
          description: ""
          schema:
            $ref: "#/definitions/TransactionResult"
  /transaction/{symbol}:
    get:
      tags:
      - "transaction"
      summary: "트랜젝션 조회"
      description: ""
      operationId: "getTransactionStatus"
      consumes:
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      parameters:
      - name: "symbol"
        in: "path"
        description: "코인 종류"
        required: true
        type: "string"
      - name: "hash"
        in: "formData"
        description: "트랜젝션 해쉬"
        required: true
        type: "string"
      responses:
        200:
          description: ""
          schema:
            $ref: "#/definitions/TransactionStatus"
  /wallet/{symbol}/transaction/count:
    get:
      tags:
      - "transaction"
      summary: "지갑의 트랜젝션 수 조회"
      description: ""
      operationId: "getTransactionCount"
      consumes:
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      parameters:
      - name: "symbol"
        in: "path"
        description: "코인 종류"
        required: true
        type: "string"
      - name: "address"
        in: "formData"
        description: "지갑 주소"
        required: true
        type: "string"
      responses:
        200:
          description: ""
          schema:
            type: "number"
            example: 3123
  /wallet/{symbol}/transaction/list:
    get:
      tags:
      - "transaction"
      summary: "지갑의 트랜젝션 조회"
      description: ""
      operationId: "getTransactionList"
      consumes:
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      parameters:
      - name: "symbol"
        in: "path"
        description: "코인 종류"
        required: true
        type: "string"
      - name: "address"
        in: "formData"
        description: "지갑 주소"
        required: true
        type: "string"
      responses:
        200:
          description: ""
          schema:
            type: "array"
            items:
              $ref: "#/definitions/TransactionStatus"

definitions:
  Wallet:
    type: "object"
    properties:
      uid:
        type: "string"
        example: "uid"
      name:
        type: "string"
        example: "김성래"
      description:
        type: "string"
        example: "지갑 설명"
      symbol:
        type: "string"
        example: "ETH"
      originalAddress:
        type: "string"
        example: "0xa5B5bE1ecB74696eC27E3CA89E5d940c9dbcCc56"
      crossAddress:
        type: "string"
        example: "cross-3341-2314"
      ownerEmail:
        type: "string"
        example: "rlatjdfo112@naver.com"
      ownerName:
        type: "string"
        example: "김성래"
      balance:
        type: "string"
        format: "float"
        example: "2.313421"
  WalletCreateResult:
    type: "object"
    properties:
      result:
        type: "boolean"
        example: true
      address:
        type: "string"
        example: "0xa5B5bE1ecB74696eC27E3CA89E5d940c9dbcCc56"
      walletName:
        type: "string"
        example: "UTC-3211abafqjwdaschxgfqjrqwr.json"
      wallet:
        type: "object"
  TransactionResult:
    type: "object"
    properties:
      status:
        type: "boolean"
        example: true
      transactionHash:
        type: "string"
        example: "0x41281gn1221jasnfmf12rh12fn1f"
  TransactionStatus:
    type: "object"
    properties:
      transactionHash:
        type: "string"
        example: "0x41281gn1221jasnfmf12rh12fn1f"
      sourceAddress:
        type: "string"
        example: "0xa5B5bE1ecB74696eC27E3CA89E5d940c9dbcCc56"
      targetAddress:
        type: "string"
        example: "0xa5B5bE1ecB74696eC27E3CA89E5d940c9dbcCc56"
      venefit:
        type: "boolean"
        example: false
      status:
        type: "boolean"
        example: true
      amount:
        type: "number"
        example: 3.14
      targetWallet:
        $ref: "#/definitions/Wallet"
      targetUser:
        $ref: "#/definitions/Profile"
      date:
        type: "string"
        example: "2017-12-22"
      blockNumber:
        type: "number"
        example: 3123124124
      confirmation:
        type: "number"
        example: 31241241
  Profile:
    type: "object"
    properties:
      uid:
        type: "string"
        example: "example uid"
      email:
        type: "string"
        example: "rlatjdfo112@naver.com"
      name:
        type: "string"
        example: "김성래"
      profile:
        type: "string"
        example: "http://facebook.com/profile/url?rlatjdfo112.png"
      crossAddress:
        type: "string"
        example: "cross-3231-3412"
  WalletModify:
    type: "object"
    properties:
      address:
        type: "string"
        example: "cross-3321-3321"

externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"
