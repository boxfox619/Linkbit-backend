buildscript {
    ext {
        vertx_jooq_version = '3.1.0'
        postgresql_version = '42.1.4'
    }
    repositories {
        maven { url "https://plugins.gradle.org/m2/" }
        mavenCentral()
    }
    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:1.2.3'
        classpath "io.github.jklingsporn:vertx-jooq-generate:$vertx_jooq_version"
        classpath "org.postgresql:postgresql:$postgresql_version"
    }
}
import groovy.xml.MarkupBuilder
import org.jooq.util.GenerationTool

import javax.xml.bind.JAXB

group 'com.boxfox.cross'
version '1.0.0'

repositories {
    jcenter()
    maven { url "https://plugins.gradle.org/m2/" }
    mavenCentral()
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'com.github.johnrengelman.shadow'

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    compile group:'io.vertx', name:'vertx-core', version:'3.5.0'
    compile group:'io.vertx', name:'vertx-web', version:'3.5.0'
    compile group:'io.vertx', name:'vertx-web-templ-handlebars', version:'3.5.0'
    compile group: 'io.vertx', name: 'vertx-auth-jwt', version:'3.5.0'
    compile group: 'io.vertx', name: 'vertx-mysql-postgresql-client', version: '3.5.0'
    compile "io.github.jklingsporn:vertx-jooq-classic:$vertx_jooq_version"
    compile group: 'org.reflections', name: 'reflections', version: '0.9.10'
    compile group: 'org.postgresql', name: 'postgresql', version: '42.2.2'
    compile group: 'commons-dbcp', name: 'commons-dbcp', version: '1.4'
    compile group:'org.web3j', name:'core', version:'3.3.1'
    testCompile group: 'junit', name: 'junit-dep', version: '4.10'
    testCompile group: 'org.mockito', name: 'mockito-core', version: '1.9.+'
}

task jooqGenerate {
    doLast() {
        def writer = new StringWriter()
        new MarkupBuilder(writer).configuration('xmlns': 'http://www.jooq.org/xsd/jooq-codegen-3.10.0.xsd') {
            jdbc {
                driver('org.postgresql.Driver')
                url('jdbc:postgresql://localhost:5432/crossdb')
                user('postgres')
                password('dbpw1234')
            }
            generator {
                name('io.github.jklingsporn.vertx.jooq.generate.VertxGenerator')
                database {
                    name('org.jooq.util.postgres.PostgresDatabase')
                    include('.*')
                    excludes('schema_version')
                    inputSchema('public')
                    includeTables(true)
                    includeRoutines(true)
                    includePackages(false)
                    includeUDTs(true)
                    includeSequences(true)
                }
                generate([:]) {
                    deprecated(false)
                    records(false)
                    interfaces(true)
                    fluentSetters(true)
                    pojos(true)
                    daos(true)
                }
                target() {
                    packageName('io.one.sys.db')
                    directory("$projectDir/src/main/java")
                }
                strategy {
                    name('io.github.jklingsporn.vertx.jooq.generate.classic.JDBCClassicVertxGeneratorStrategy')
                }
            }
        }
        GenerationTool.generate(
                JAXB.unmarshal(new StringReader(writer.toString()), org.jooq.util.jaxb.Configuration.class)
        )
    }
}

shadowJar {
    mustRunAfter jar

    destinationDir =  file("$projectDir/build/shadow")
    classifier = 'all'
    manifest {
        attributes 'Main-Class': 'io.vertx.core.Launcher'
        attributes 'Main-Verticle': 'com.boxfox.core.MainVerticle'
    }
    mergeServiceFiles {
        include 'META-INF/services/io.vertx.core.spi.VerticleFactory'
    }
}

assemble.dependsOn shadowJar

task start(dependsOn: shadowJar) {
    doLast {
        javaexec { main = "-jar"; args += project.tasks.shadowJar.archivePath }
    }
}